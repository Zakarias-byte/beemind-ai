# Main BeeMind Dashboard (beemind.dev)
server {
    listen 80;
    server_name beemind.dev www.beemind.dev;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name beemind.dev www.beemind.dev;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/live/beemind.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/beemind.dev/privkey.pem;

    # Security headers specific to main site
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting for login
    location /api/auth {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://beemind-dashboard:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Main dashboard application
    location / {
        proxy_pass http://beemind-dashboard:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://beemind-dashboard:3000;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://beemind-dashboard:3000/api/health;
        access_log off;
    }
}

# API Server (api.beemind.dev)
server {
    listen 80;
    server_name api.beemind.dev;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.beemind.dev;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/live/beemind.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/beemind.dev/privkey.pem;

    # API rate limiting
    limit_req zone=api burst=20 nodelay;

    # CORS headers for API
    add_header Access-Control-Allow-Origin "https://beemind.dev" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-API-Key" always;
    add_header Access-Control-Allow-Credentials true always;

    # Handle preflight requests
    location ~* \.(OPTIONS)$ {
        add_header Access-Control-Allow-Origin "https://beemind.dev";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-API-Key";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }

    # API endpoints
    location / {
        proxy_pass http://beemind-api:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }

    # WebSocket support for real-time features
    location /ws {
        proxy_pass http://beemind-api:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check
    location /health {
        proxy_pass http://beemind-api:8000/health;
        access_log off;
    }

    # API documentation
    location /docs {
        proxy_pass http://beemind-api:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# MLFlow Server (mlflow.beemind.dev) - Internal access only
server {
    listen 443 ssl http2;
    server_name mlflow.beemind.dev;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/live/beemind.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/beemind.dev/privkey.pem;

    # Restrict access to internal networks
    allow 172.20.0.0/16;  # Docker network
    allow 10.0.0.0/8;     # Private networks
    allow 192.168.0.0/16; # Private networks
    deny all;

    location / {
        proxy_pass http://mlflow:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Monitoring (monitoring.beemind.dev) - Admin access only
server {
    listen 443 ssl http2;
    server_name monitoring.beemind.dev;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/live/beemind.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/beemind.dev/privkey.pem;

    # Basic authentication for monitoring
    auth_basic "BeeMind Monitoring";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Grafana
    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Prometheus
    location /prometheus/ {
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Default server block (catch-all)
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;

    # SSL certificates for default server
    ssl_certificate /etc/nginx/ssl/live/beemind.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/beemind.dev/privkey.pem;

    # Return 444 for undefined server names
    return 444;
}
